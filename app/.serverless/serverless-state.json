{
  "service": {
    "service": "serverless-spam-detection-fastapi",
    "serviceObject": {
      "name": "serverless-spam-detection-fastapi"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.7",
      "region": "us-east-1",
      "lambdaHashingVersion": "20201221",
      "stage": "dev",
      "deploymentBucket": "serverless-spam-detection",
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:GetObject"
          ],
          "Resource": "arn:aws:s3:::serverless-spam-detection/*"
        }
      ],
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "serverless-spam-detection"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/fastapi_spam_detection_api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "serverless-spam-detection-fastapi",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/fastapi_spam_detection_api:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/fastapi_spam_detection_api:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "serverless-spam-detection-fastapi",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "PythonRequirementsLambdaLayer": {
            "Type": "AWS::Lambda::LayerVersion",
            "Properties": {
              "Content": {
                "S3Bucket": "serverless-spam-detection",
                "S3Key": "serverless/serverless-spam-detection-fastapi/dev/1634151194459-2021-10-13T18:53:14.459Z/pythonRequirements.zip"
              },
              "LayerName": "serverless-spam-detection-fastapi-dev-python-requirements",
              "Description": "Python requirements generated by serverless-python-requirements.",
              "CompatibleRuntimes": [
                "python3.7"
              ]
            }
          },
          "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "serverless-spam-detection",
                "S3Key": "serverless/serverless-spam-detection-fastapi/dev/1634151194459-2021-10-13T18:53:14.459Z/fastapi_spam_detection_api.zip"
              },
              "Handler": "main.handler",
              "Runtime": "python3.7",
              "FunctionName": "fastapi_spam_detection_api",
              "MemorySize": 1024,
              "Timeout": 6,
              "Description": "serverless spam detection lambda",
              "Environment": {
                "Variables": {
                  "STAGE": "dev"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:446751924810:layer:python-3-7-scikit-learn-0-22-0:3",
                {
                  "Ref": "PythonRequirementsLambdaLayer"
                }
              ]
            },
            "DependsOn": [
              "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLogGroup"
            ]
          },
          "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaVersionjfQeoiF4i6jZKmBhappAkUWYZZc8qY6buDJHrlm0Y": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaFunction"
              },
              "CodeSha256": "SCLS5Vs9dF6g2yuyQ++fPNxntr4UuykuugK+Ot0xkmI=",
              "Description": "serverless spam detection lambda"
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-serverless-spam-detection-fastapi",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceProxyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{proxy+}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodProxyVarOptions": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "AuthorizationType": "NONE",
              "HttpMethod": "OPTIONS",
              "MethodResponses": [
                {
                  "StatusCode": "200",
                  "ResponseParameters": {
                    "method.response.header.Access-Control-Allow-Origin": true,
                    "method.response.header.Access-Control-Allow-Headers": true,
                    "method.response.header.Access-Control-Allow-Methods": true
                  },
                  "ResponseModels": {}
                }
              ],
              "RequestParameters": {},
              "Integration": {
                "Type": "MOCK",
                "RequestTemplates": {
                  "application/json": "{statusCode:200}"
                },
                "ContentHandling": "CONVERT_TO_TEXT",
                "IntegrationResponses": [
                  {
                    "StatusCode": "200",
                    "ResponseParameters": {
                      "method.response.header.Access-Control-Allow-Origin": "'*'",
                      "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token,X-Amz-User-Agent'",
                      "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET'"
                    },
                    "ResponseTemplates": {
                      "application/json": ""
                    }
                  }
                ]
              },
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "LambdaApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "LambdaApiGatewayAuthorizer"
          },
          "ApiGatewayMethodProxyVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceProxyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "CUSTOM",
              "AuthorizerId": {
                "Ref": "LambdaApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "LambdaApiGatewayAuthorizer"
          },
          "LambdaApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 0,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "lambda",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "IdentityValidationExpression": ".*",
              "AuthorizerUri": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":apigateway:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":lambda:path/2015-03-31/functions/",
                    "arn:aws:lambda:us-east-1:086948990359:function:spam-authorizer-lambda",
                    "/invocations"
                  ]
                ]
              },
              "Type": "TOKEN"
            }
          },
          "ApiGatewayDeployment1634151189021": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodOptions",
              "ApiGatewayMethodProxyVarOptions",
              "ApiGatewayMethodGet",
              "ApiGatewayMethodProxyVarGet"
            ]
          },
          "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LambdaLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": "arn:aws:lambda:us-east-1:086948990359:function:spam-authorizer-lambda",
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "serverless-spam-detection",
            "Export": {
              "Name": "sls-serverless-spam-detection-fastapi-dev-ServerlessDeploymentBucketName"
            }
          },
          "PythonRequirementsLambdaLayerQualifiedArn": {
            "Description": "Current Lambda layer version",
            "Value": {
              "Ref": "PythonRequirementsLambdaLayer"
            },
            "Export": {
              "Name": "sls-serverless-spam-detection-fastapi-dev-PythonRequirementsLambdaLayerQualifiedArn"
            }
          },
          "PythonRequirementsLambdaLayerHash": {
            "Description": "Current Lambda layer hash",
            "Value": "60a2dcc5f3bd36c772012c08589effe402a3a9da",
            "Export": {
              "Name": "sls-serverless-spam-detection-fastapi-dev-PythonRequirementsLambdaLayerHash"
            }
          },
          "PythonRequirementsLambdaLayerS3Key": {
            "Description": "Current Lambda layer S3Key",
            "Value": "serverless/serverless-spam-detection-fastapi/dev/1634151194459-2021-10-13T18:53:14.459Z/pythonRequirements.zip",
            "Export": {
              "Name": "sls-serverless-spam-detection-fastapi-dev-PythonRequirementsLambdaLayerS3Key"
            }
          },
          "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaVersionjfQeoiF4i6jZKmBhappAkUWYZZc8qY6buDJHrlm0Y"
            },
            "Export": {
              "Name": "sls-serverless-spam-detection-fastapi-dev-FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-serverless-spam-detection-fastapi-dev-ServiceEndpoint"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "pythonRequirements": {
        "slim": true,
        "layer": true,
        "useDownloadCache": true,
        "useStaticCache": true
      }
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "fastapi_spam_detection_api": {
        "name": "fastapi_spam_detection_api",
        "description": "serverless spam detection lambda",
        "handler": "main.handler",
        "package": {
          "include": [
            "main.py",
            "load_model.py",
            "preprocessor.py",
            "classify_message.py"
          ],
          "exclude": [
            "requirements.txt",
            "package.json",
            "package-lock.json",
            ".serverless/**",
            ".virtualenv/**",
            "node_modules/**"
          ],
          "artifact": "/Users/dianacorona/Documents/DIANA GIT /AWSlambda_FASTAPI_spam_detection_api/FastAPISpamDetection/app/.serverless/fastapi_spam_detection_api.zip"
        },
        "environment": {
          "STAGE": "dev"
        },
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "events": [
          {
            "http": {
              "path": "",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "type": "token",
                "name": "lambda",
                "arn": "arn:aws:lambda:us-east-1:086948990359:function:spam-authorizer-lambda",
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "identityValidationExpression": ".*",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          },
          {
            "http": {
              "path": "{proxy+}",
              "method": "get",
              "cors": {
                "origin": "*",
                "methods": [
                  "OPTIONS",
                  "GET"
                ],
                "headers": [
                  "Content-Type",
                  "X-Amz-Date",
                  "Authorization",
                  "X-Api-Key",
                  "X-Amz-Security-Token",
                  "X-Amz-User-Agent"
                ],
                "allowCredentials": false
              },
              "authorizer": {
                "type": "token",
                "name": "lambda",
                "arn": "arn:aws:lambda:us-east-1:086948990359:function:spam-authorizer-lambda",
                "managedExternally": false,
                "resultTtlInSeconds": 0,
                "identitySource": "method.request.header.Authorization",
                "identityValidationExpression": ".*",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "module": ".",
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.7",
        "vpc": {},
        "versionLogicalId": "FastapiUnderscorespamUnderscoredetectionUnderscoreapiLambdaVersionjfQeoiF4i6jZKmBhappAkUWYZZc8qY6buDJHrlm0Y"
      }
    },
    "configValidationMode": "error",
    "serviceFilename": "serverless.yaml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "configValidationMode": "error",
      "package": {
        "individually": true,
        "deploymentBucket": "serverless-spam-detection",
        "artifactDirectoryName": "serverless/serverless-spam-detection-fastapi/dev/1634151194459-2021-10-13T18:53:14.459Z"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "layers": {
      "pythonRequirements": {
        "artifact": ".serverless/pythonRequirements.zip",
        "name": "serverless-spam-detection-fastapi-dev-python-requirements",
        "description": "Python requirements generated by serverless-python-requirements.",
        "compatibleRuntimes": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PythonRequirementsLambdaLayer\"][\"Properties\"][\"CompatibleRuntimes\"]"
        },
        "package": {}
      }
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/serverless-spam-detection-fastapi/dev/1634151194459-2021-10-13T18:53:14.459Z",
    "artifact": ""
  }
}